local camera = workspace.CurrentCamera
local framecount = 0
local updframe = 4

local function getscreenpoint(position)
	return Vector2.new()
end

local function setupdots(char:Model)
	local hum = char:FindFirstChildOfClass("Humanoid")

	local point1 = Instance.new("Attachment", char.HumanoidRootPart)
	local point2 = Instance.new("Attachment", char.HumanoidRootPart)
	local point3 = Instance.new("Attachment", char.HumanoidRootPart)
	local point4 = Instance.new("Attachment", char.HumanoidRootPart)

	point1.Name = "Point1"
	point2.Name = "Point2"
	point3.Name = "Point3"
	point4.Name = "Point4"

	if char:FindFirstChild("LeftHand") then
		point1.Position = Vector3.new(1.75, (char.Head.Position.Y - char.HumanoidRootPart.Position.Y) + 1, 0)
		point2.Position = Vector3.new(-1.75, (char.Head.Position.Y - char.HumanoidRootPart.Position.Y) + 1, 0)
		point3.Position = Vector3.new(1.75, char.LowerTorso.Position.Y - char.HumanoidRootPart.Position.Y - (hum.HipHeight * 1.1), 0)
		point4.Position = Vector3.new(-1.75, char.LowerTorso.Position.Y - char.HumanoidRootPart.Position.Y - (hum.HipHeight * 1.1), 0)
	else
		point1.Position = Vector3.new(1.75, (char.Head.Position.Y - char.HumanoidRootPart.Position.Y) + 1, 0)
		point2.Position = Vector3.new(-1.75, (char.Head.Position.Y - char.HumanoidRootPart.Position.Y) + 1, 0)
		point3.Position = Vector3.new(1.75, -3, 0)
		point4.Position = Vector3.new(-1.75, -3, 0)
	end
end

game:GetService("RunService").RenderStepped:Connect(function()
	framecount += 1

	if framecount == updframe then
		cleardrawcache()
		framecount = 0
		for _, plr:Player in game.Players:GetChildren() do
			if plr.Name ~= game.Players.LocalPlayer.Name then
				if plr.Character then
					if plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character:FindFirstChild("Head") then
						local tracer = Drawing.new("Line")
						tracer.Transparency = 0.5
						tracer.Thickness = 2
						tracer.Color = plr.TeamColor.Color

                        plr.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None

						local vct, onscr = camera:worldToViewportPoint(plr.Character.PrimaryPart.Position)
						if onscr == true then
							local mouse = game.Players.LocalPlayer:GetMouse()
							tracer.From = Vector2.new(mouse.X, mouse.Y)
							tracer.To = Vector2.new(vct.X, vct.Y)

							local line1 = Drawing.new("Line")
							local line2 = Drawing.new("Line")
							local line3 = Drawing.new("Line")
							local line4 = Drawing.new("Line")
                            local text = Drawing.new("Text")
                            local hp = Drawing.new("Text")
                            hp.Center = true
                            hp.Font = 4
                            hp.Size = 18
                            hp.Transparency = 1
                            text.Center = true
                            text.Outline = true
                            text.Size = 20
                            text.Font = 5
                            text.Transparency = 1
							line1.Transparency = 1
							line2.Transparency = 1
							line3.Transparency = 1
							line4.Transparency = 1
                            text.Color = Color3.new(255, 255, 255)
							line1.Color = Color3.new(255, 255, 255)
							line2.Color = Color3.new(255, 255, 255)
							line3.Color = Color3.new(255, 255, 255)
							line4.Color = Color3.new(255, 255, 255)

							local point1 = plr.Character.HumanoidRootPart:FindFirstChild("Point1")
							local point2 = plr.Character.HumanoidRootPart:FindFirstChild("Point2")
							local point3 = plr.Character.HumanoidRootPart:FindFirstChild("Point3")
							local point4 = plr.Character.HumanoidRootPart:FindFirstChild("Point4")

							if point1 then
								line1.From = Vector2.new(camera:worldToViewportPoint(point1.WorldPosition).X, camera:worldToViewportPoint(point1.WorldPosition).Y)
								line1.To = Vector2.new(camera:worldToViewportPoint(point2.WorldPosition).X, camera:worldToViewportPoint(point2.WorldPosition).Y)

								line2.From = Vector2.new(camera:worldToViewportPoint(point2.WorldPosition).X, camera:worldToViewportPoint(point2.WorldPosition).Y)
								line2.To = Vector2.new(camera:worldToViewportPoint(point4.WorldPosition).X, camera:worldToViewportPoint(point4.WorldPosition).Y)

								line3.From = Vector2.new(camera:worldToViewportPoint(point3.WorldPosition).X, camera:worldToViewportPoint(point3.WorldPosition).Y)
								line3.To = Vector2.new(camera:worldToViewportPoint(point4.WorldPosition).X, camera:worldToViewportPoint(point4.WorldPosition).Y)

								line4.From = Vector2.new(camera:worldToViewportPoint(point3.WorldPosition).X, camera:worldToViewportPoint(point3.WorldPosition).Y)
								line4.To = Vector2.new(camera:worldToViewportPoint(point1.WorldPosition).X, camera:worldToViewportPoint(point1.WorldPosition).Y)

                                local hrppos = plr.Character.HumanoidRootPart.Position
                                local ypos = hrppos.Y + ((game.Players.LocalPlayer:DistanceFromCharacter(plr.Character.HumanoidRootPart.Position) / 45) + 3)
                                local pos = camera:worldToViewportPoint(Vector3.new(hrppos.X, ypos, hrppos.Z))
                                text.Position = Vector2.new(pos.X, pos.Y)
                                text.Text = plr.Name

                                local ypos2 = hrppos.Y - ((game.Players.LocalPlayer:DistanceFromCharacter(plr.Character.HumanoidRootPart.Position) / 55) + 3)
                                local pos = camera:worldToViewportPoint(Vector3.new(hrppos.X, ypos2, hrppos.Z))
                                hp.Position = Vector2.new(pos.X, pos.Y)
                                hp.Color = Color3.new(1, 0, 0):Lerp(Color3.new(0, 1, 0), plr.Character.Humanoid.Health / plr.Character.Humanoid.MaxHealth)
                                hp.Text = math.round(plr.Character.Humanoid.Health)
							else
								setupdots(plr.Character)
							end

						else
							tracer.Visible = false
						end
					end
				end
			end
		end
	end
end)
